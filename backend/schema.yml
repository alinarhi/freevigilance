openapi: 3.0.3
info:
  title: Freevigilance API
  version: 0.1.0
  description: PVA Management Application for Pharmaceutical Companies.
paths:
  /api/auditlog/:
    get:
      operationId: auditlog_list
      parameters:
      - in: query
        name: action
        schema:
          type: integer
          enum:
          - 0
          - 1
          - 2
          - 3
        description: |-
          * `0` - create
          * `1` - update
          * `2` - delete
          * `3` - access
      - in: query
        name: actor__last_name__icontains
        schema:
          type: string
      - in: query
        name: actor__username__iexact
        schema:
          type: string
      - in: query
        name: content_type__model__iexact
        schema:
          type: string
      - in: query
        name: object_id
        schema:
          type: integer
      - in: query
        name: timestamp__gte
        schema:
          type: string
          format: date-time
      - in: query
        name: timestamp__lte
        schema:
          type: string
          format: date-time
      tags:
      - auditlog
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LogEntry'
          description: ''
  /api/medicinal-products/:
    get:
      operationId: medicinal_products_list
      tags:
      - medicinal-products
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MedicinalProduct'
          description: ''
    post:
      operationId: medicinal_products_create
      tags:
      - medicinal-products
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MedicinalProduct'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MedicinalProduct'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MedicinalProduct'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MedicinalProduct'
          description: ''
  /api/medicinal-products/{id}/:
    get:
      operationId: medicinal_products_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Лекарственный препарат.
        required: true
      tags:
      - medicinal-products
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MedicinalProduct'
          description: ''
    put:
      operationId: medicinal_products_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Лекарственный препарат.
        required: true
      tags:
      - medicinal-products
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MedicinalProduct'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MedicinalProduct'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MedicinalProduct'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MedicinalProduct'
          description: ''
    patch:
      operationId: medicinal_products_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Лекарственный препарат.
        required: true
      tags:
      - medicinal-products
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedMedicinalProduct'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedMedicinalProduct'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedMedicinalProduct'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MedicinalProduct'
          description: ''
    delete:
      operationId: medicinal_products_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Лекарственный препарат.
        required: true
      tags:
      - medicinal-products
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/obligations/:
    get:
      operationId: obligations_list
      parameters:
      - in: query
        name: description__icontains
        schema:
          type: string
      - in: query
        name: pva
        schema:
          type: integer
      - in: query
        name: responsibility_type__title__iexact
        schema:
          type: string
      - in: query
        name: title__icontains
        schema:
          type: string
      tags:
      - obligations
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Obligation'
          description: ''
    post:
      operationId: obligations_create
      tags:
      - obligations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Obligation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Obligation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Obligation'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Obligation'
          description: ''
  /api/obligations/{id}/tasks/:
    get:
      operationId: obligations_tasks_list
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - tasks
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'
          description: ''
  /api/obligations/{id}/:
    get:
      operationId: obligations_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Обязательство.
        required: true
      tags:
      - obligations
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Obligation'
          description: ''
    put:
      operationId: obligations_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Обязательство.
        required: true
      tags:
      - obligations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Obligation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Obligation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Obligation'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Obligation'
          description: ''
    patch:
      operationId: obligations_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Обязательство.
        required: true
      tags:
      - obligations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedObligation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedObligation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedObligation'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Obligation'
          description: ''
    delete:
      operationId: obligations_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Обязательство.
        required: true
      tags:
      - obligations
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/pvas/:
    get:
      operationId: pvas_list
      parameters:
      - in: query
        name: medicinal_products__title__icontains
        schema:
          type: string
      - in: query
        name: requisites__icontains
        schema:
          type: string
      - in: query
        name: status
        schema:
          type: string
          enum:
          - ACTIVE
          - COMPLETED
          - ENDING
          - PLANNED
        description: |-
          * `PLANNED` - Планируемый
          * `ACTIVE` - Заключен
          * `ENDING` - Завершающийся
          * `COMPLETED` - Завершен
      tags:
      - pvas
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PVA'
          description: ''
    post:
      operationId: pvas_create
      tags:
      - pvas
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PVA'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PVA'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PVA'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PVA'
          description: ''
  /api/pvas/{id}/obligations/:
    get:
      operationId: pvas_obligations_list
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - obligations
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Obligation'
          description: ''
  /api/pvas/{id}/:
    get:
      operationId: pvas_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Договор.
        required: true
      tags:
      - pvas
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PVA'
          description: ''
    put:
      operationId: pvas_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Договор.
        required: true
      tags:
      - pvas
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PVA'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PVA'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PVA'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PVA'
          description: ''
    patch:
      operationId: pvas_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Договор.
        required: true
      tags:
      - pvas
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPVA'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPVA'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPVA'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PVA'
          description: ''
    delete:
      operationId: pvas_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Договор.
        required: true
      tags:
      - pvas
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/responsibility-types/:
    get:
      operationId: responsibility_types_list
      tags:
      - responsibility-types
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponsibilityType'
          description: ''
    post:
      operationId: responsibility_types_create
      tags:
      - responsibility-types
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResponsibilityType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ResponsibilityType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ResponsibilityType'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponsibilityType'
          description: ''
  /api/responsibility-types/{id}/:
    get:
      operationId: responsibility_types_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Тип обязательства.
        required: true
      tags:
      - responsibility-types
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponsibilityType'
          description: ''
    put:
      operationId: responsibility_types_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Тип обязательства.
        required: true
      tags:
      - responsibility-types
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResponsibilityType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ResponsibilityType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ResponsibilityType'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponsibilityType'
          description: ''
    patch:
      operationId: responsibility_types_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Тип обязательства.
        required: true
      tags:
      - responsibility-types
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedResponsibilityType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedResponsibilityType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedResponsibilityType'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponsibilityType'
          description: ''
    delete:
      operationId: responsibility_types_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Тип обязательства.
        required: true
      tags:
      - responsibility-types
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/tasks/:
    get:
      operationId: tasks_list
      parameters:
      - in: query
        name: assigned_to
        schema:
          type: integer
      - in: query
        name: assigned_to__last_name__icontains
        schema:
          type: string
      - in: query
        name: assigned_to__username__iexact
        schema:
          type: string
      - in: query
        name: created_by__last_name__icontains
        schema:
          type: string
      - in: query
        name: created_by__username
        schema:
          type: string
      - in: query
        name: deadline__gte
        schema:
          type: string
          format: date-time
      - in: query
        name: deadline__lte
        schema:
          type: string
          format: date-time
      - in: query
        name: description__icontains
        schema:
          type: string
      - in: query
        name: obligation
        schema:
          type: integer
      - in: query
        name: obligation__responsibility_type__title__iexact
        schema:
          type: string
      - in: query
        name: status
        schema:
          type: string
          enum:
          - COMPLETED
          - HIDDEN
          - IN_PROGRESS
          - NOT_STARTED
        description: |-
          * `NOT_STARTED` - Не начата
          * `IN_PROGRESS` - В работе
          * `COMPLETED` - Завершена
          * `HIDDEN` - Скрыта
      - in: query
        name: title__icontains
        schema:
          type: string
      tags:
      - tasks
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'
          description: ''
    post:
      operationId: tasks_create
      tags:
      - tasks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Task'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Task'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Task'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
          description: ''
  /api/tasks/{id}/changelog/:
    get:
      operationId: tasks_changelog_list
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - tasks
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LogEntry'
          description: ''
  /api/tasks/{id}/comments/:
    get:
      operationId: tasks_comments_list
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - tasks
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Comment'
          description: ''
    post:
      operationId: tasks_comments_create
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - tasks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Comment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Comment'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
          description: ''
  /api/tasks/{id}/:
    get:
      operationId: tasks_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Задача.
        required: true
      tags:
      - tasks
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
          description: ''
    put:
      operationId: tasks_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Задача.
        required: true
      tags:
      - tasks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Task'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Task'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Task'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
          description: ''
    patch:
      operationId: tasks_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Задача.
        required: true
      tags:
      - tasks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTask'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTask'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTask'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
          description: ''
    delete:
      operationId: tasks_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Задача.
        required: true
      tags:
      - tasks
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/tasks/{id}/change-status/:
    post:
      operationId: tasks_change_status_create
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Задача.
        required: true
      tags:
      - tasks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskStatus'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TaskStatus'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TaskStatus'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
          description: ''
  /api/tasks/completed/:
    get:
      operationId: tasks_completed_list
      parameters:
      - in: query
        name: assigned_to
        schema:
          type: integer
      - in: query
        name: assigned_to__last_name__icontains
        schema:
          type: string
      - in: query
        name: assigned_to__username__iexact
        schema:
          type: string
      - in: query
        name: created_by__last_name__icontains
        schema:
          type: string
      - in: query
        name: created_by__username
        schema:
          type: string
      - in: query
        name: deadline__gte
        schema:
          type: string
          format: date-time
      - in: query
        name: deadline__lte
        schema:
          type: string
          format: date-time
      - in: query
        name: description__icontains
        schema:
          type: string
      - in: query
        name: obligation
        schema:
          type: integer
      - in: query
        name: obligation__responsibility_type__title__iexact
        schema:
          type: string
      - in: query
        name: status
        schema:
          type: string
          enum:
          - COMPLETED
          - HIDDEN
          - IN_PROGRESS
          - NOT_STARTED
        description: |-
          * `NOT_STARTED` - Не начата
          * `IN_PROGRESS` - В работе
          * `COMPLETED` - Завершена
          * `HIDDEN` - Скрыта
      - in: query
        name: title__icontains
        schema:
          type: string
      tags:
      - tasks
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'
          description: ''
  /api/tasks/my/:
    get:
      operationId: tasks_my_list
      parameters:
      - in: query
        name: assigned_to
        schema:
          type: integer
      - in: query
        name: assigned_to__last_name__icontains
        schema:
          type: string
      - in: query
        name: assigned_to__username__iexact
        schema:
          type: string
      - in: query
        name: created_by__last_name__icontains
        schema:
          type: string
      - in: query
        name: created_by__username
        schema:
          type: string
      - in: query
        name: deadline__gte
        schema:
          type: string
          format: date-time
      - in: query
        name: deadline__lte
        schema:
          type: string
          format: date-time
      - in: query
        name: description__icontains
        schema:
          type: string
      - in: query
        name: obligation
        schema:
          type: integer
      - in: query
        name: obligation__responsibility_type__title__iexact
        schema:
          type: string
      - in: query
        name: status
        schema:
          type: string
          enum:
          - COMPLETED
          - HIDDEN
          - IN_PROGRESS
          - NOT_STARTED
        description: |-
          * `NOT_STARTED` - Не начата
          * `IN_PROGRESS` - В работе
          * `COMPLETED` - Завершена
          * `HIDDEN` - Скрыта
      - in: query
        name: title__icontains
        schema:
          type: string
      tags:
      - tasks
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'
          description: ''
  /api/tasks/my/completed/:
    get:
      operationId: tasks_my_completed_list
      parameters:
      - in: query
        name: assigned_to
        schema:
          type: integer
      - in: query
        name: assigned_to__last_name__icontains
        schema:
          type: string
      - in: query
        name: assigned_to__username__iexact
        schema:
          type: string
      - in: query
        name: created_by__last_name__icontains
        schema:
          type: string
      - in: query
        name: created_by__username
        schema:
          type: string
      - in: query
        name: deadline__gte
        schema:
          type: string
          format: date-time
      - in: query
        name: deadline__lte
        schema:
          type: string
          format: date-time
      - in: query
        name: description__icontains
        schema:
          type: string
      - in: query
        name: obligation
        schema:
          type: integer
      - in: query
        name: obligation__responsibility_type__title__iexact
        schema:
          type: string
      - in: query
        name: status
        schema:
          type: string
          enum:
          - COMPLETED
          - HIDDEN
          - IN_PROGRESS
          - NOT_STARTED
        description: |-
          * `NOT_STARTED` - Не начата
          * `IN_PROGRESS` - В работе
          * `COMPLETED` - Завершена
          * `HIDDEN` - Скрыта
      - in: query
        name: title__icontains
        schema:
          type: string
      tags:
      - tasks
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'
          description: ''
  /api/token/:
    post:
      operationId: token_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
  /api/token/refresh/:
    post:
      operationId: token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /api/users/:
    get:
      operationId: users_list
      tags:
      - users
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
          description: ''
    post:
      operationId: users_create
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/users/{id}/:
    get:
      operationId: users_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this пользователь.
        required: true
      tags:
      - users
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: users_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this пользователь.
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: users_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this пользователь.
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUser'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    delete:
      operationId: users_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this пользователь.
        required: true
      tags:
      - users
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/users/me/:
    get:
      operationId: users_me_retrieve
      tags:
      - users
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
components:
  schemas:
    ActionEnum:
      enum:
      - 0
      - 1
      - 2
      - 3
      type: integer
      description: |-
        * `0` - create
        * `1` - update
        * `2` - delete
        * `3` - access
    Comment:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_by_display:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        text:
          type: string
        created_by:
          type: integer
          readOnly: true
        task:
          type: integer
          readOnly: true
      required:
      - text
    FrequencyTypeEnum:
      enum:
      - D
      - W
      - M
      - Y
      type: string
      description: |-
        * `D` - Ежедневно
        * `W` - Каждую неделю
        * `M` - Каждый месяц
        * `Y` - Каждый год
    LogEntry:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        actor_display:
          type: string
          readOnly: true
        content_type:
          type: string
          title: Имя класса модели
          readOnly: true
        content_type_display:
          type: string
          readOnly: true
        action_display:
          type: string
          readOnly: true
        object_pk:
          type: string
          maxLength: 255
        object_id:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
          nullable: true
          title: Идентификатор объекта
        object_repr:
          type: string
          title: Object representation
        serialized_data:
          nullable: true
        action:
          allOf:
          - $ref: '#/components/schemas/ActionEnum'
          minimum: 0
          maximum: 9223372036854775807
        changes_text:
          type: string
          title: Сообщение об изменении
        changes:
          nullable: true
          title: Сообщение об изменении
        cid:
          type: string
          nullable: true
          title: Correlation ID
          maxLength: 255
        remote_addr:
          type: string
          nullable: true
          title: Remote address
        timestamp:
          type: string
          format: date-time
        additional_data:
          nullable: true
        actor:
          type: integer
          nullable: true
      required:
      - action
      - object_pk
      - object_repr
    MedicinalProduct:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 255
        description:
          type: string
      required:
      - title
    Obligation:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        pva_display:
          type: string
          readOnly: true
        responsibility_type:
          type: string
        title:
          type: string
          maxLength: 255
        description:
          type: string
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
        pva:
          type: integer
      required:
      - end_date
      - pva
      - start_date
      - title
    PVA:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        medicinal_products:
          type: array
          items:
            type: string
        status_display:
          type: string
          readOnly: true
        requisites:
          type: string
          maxLength: 500
        description:
          type: string
        pva_link:
          type: string
          maxLength: 2048
        main_contract_link:
          type: string
          maxLength: 2048
        status:
          $ref: '#/components/schemas/PVAStatusEnum'
        start_date:
          type: string
          format: date
          nullable: true
        end_date:
          type: string
          format: date
          nullable: true
      required:
      - requisites
    PVAStatusEnum:
      enum:
      - PLANNED
      - ACTIVE
      - ENDING
      - COMPLETED
      type: string
      description: |-
        * `PLANNED` - Планируемый
        * `ACTIVE` - Заключен
        * `ENDING` - Завершающийся
        * `COMPLETED` - Завершен
    PatchedMedicinalProduct:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 255
        description:
          type: string
    PatchedObligation:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        pva_display:
          type: string
          readOnly: true
        responsibility_type:
          type: string
        title:
          type: string
          maxLength: 255
        description:
          type: string
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
        pva:
          type: integer
    PatchedPVA:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        medicinal_products:
          type: array
          items:
            type: string
        status_display:
          type: string
          readOnly: true
        requisites:
          type: string
          maxLength: 500
        description:
          type: string
        pva_link:
          type: string
          maxLength: 2048
        main_contract_link:
          type: string
          maxLength: 2048
        status:
          $ref: '#/components/schemas/PVAStatusEnum'
        start_date:
          type: string
          format: date
          nullable: true
        end_date:
          type: string
          format: date
          nullable: true
    PatchedResponsibilityType:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 255
    PatchedTask:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        schedule:
          $ref: '#/components/schemas/TaskSchedule'
        status_display:
          type: string
          readOnly: true
        created_by_display:
          type: string
          readOnly: true
        assigned_to_display:
          type: string
          readOnly: true
        obligation_display:
          type: string
          readOnly: true
        pva_display:
          type: string
          readOnly: true
        responsibility_type_display:
          type: string
          readOnly: true
        title:
          type: string
          maxLength: 255
        description:
          type: string
        status:
          allOf:
          - $ref: '#/components/schemas/TaskStatusEnum'
          readOnly: true
        deadline:
          type: string
          format: date-time
        is_recurring:
          type: boolean
        completion_evidence_link:
          type: string
          maxLength: 2048
        created_by:
          type: integer
          readOnly: true
        assigned_to:
          type: integer
          nullable: true
        obligation:
          type: integer
    PatchedUser:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        password:
          type: string
          writeOnly: true
          title: Пароль
          maxLength: 128
        last_login:
          type: string
          format: date-time
          readOnly: true
          nullable: true
          title: Последний вход
        is_superuser:
          type: boolean
          readOnly: true
          title: Статус суперпользователя
          description: Указывает, что пользователь имеет все права без явного их назначения.
        username:
          type: string
          readOnly: true
          title: Имя пользователя
          description: Обязательное поле. Не более 150 символов. Только буквы, цифры
            и символы @/./+/-/_.
        first_name:
          type: string
          title: Имя
          maxLength: 150
        last_name:
          type: string
          title: Фамилия
          maxLength: 150
        email:
          type: string
          format: email
          title: Адрес электронной почты
          maxLength: 254
        is_staff:
          type: boolean
          readOnly: true
          title: Статус персонала
          description: Отметьте, если пользователь может входить в административную
            часть сайта.
        is_active:
          type: boolean
          readOnly: true
          title: Активный
          description: Отметьте, если пользователь должен считаться активным. Уберите
            эту отметку вместо удаления учётной записи.
        date_joined:
          type: string
          format: date-time
          readOnly: true
          title: Дата регистрации
    ResponsibilityType:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 255
      required:
      - title
    Task:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        schedule:
          $ref: '#/components/schemas/TaskSchedule'
        status_display:
          type: string
          readOnly: true
        created_by_display:
          type: string
          readOnly: true
        assigned_to_display:
          type: string
          readOnly: true
        obligation_display:
          type: string
          readOnly: true
        pva_display:
          type: string
          readOnly: true
        responsibility_type_display:
          type: string
          readOnly: true
        title:
          type: string
          maxLength: 255
        description:
          type: string
        status:
          allOf:
          - $ref: '#/components/schemas/TaskStatusEnum'
          readOnly: true
        deadline:
          type: string
          format: date-time
        is_recurring:
          type: boolean
        completion_evidence_link:
          type: string
          maxLength: 2048
        created_by:
          type: integer
          readOnly: true
        assigned_to:
          type: integer
          nullable: true
        obligation:
          type: integer
      required:
      - deadline
      - obligation
      - title
    TaskSchedule:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        frequency_type:
          $ref: '#/components/schemas/FrequencyTypeEnum'
        day_of_week:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
          nullable: true
        week_of_month:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
          nullable: true
        day_of_month:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
          nullable: true
        month_of_year:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
          nullable: true
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
      required:
      - end_date
      - start_date
    TaskStatus:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/TaskStatusEnum'
        completion_evidence_link:
          type: string
          maxLength: 2048
      required:
      - status
    TaskStatusEnum:
      enum:
      - NOT_STARTED
      - IN_PROGRESS
      - COMPLETED
      - HIDDEN
      type: string
      description: |-
        * `NOT_STARTED` - Не начата
        * `IN_PROGRESS` - В работе
        * `COMPLETED` - Завершена
        * `HIDDEN` - Скрыта
    TokenObtainPair:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
      - password
      - username
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          writeOnly: true
      required:
      - refresh
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        password:
          type: string
          writeOnly: true
          title: Пароль
          maxLength: 128
        last_login:
          type: string
          format: date-time
          readOnly: true
          nullable: true
          title: Последний вход
        is_superuser:
          type: boolean
          readOnly: true
          title: Статус суперпользователя
          description: Указывает, что пользователь имеет все права без явного их назначения.
        username:
          type: string
          readOnly: true
          title: Имя пользователя
          description: Обязательное поле. Не более 150 символов. Только буквы, цифры
            и символы @/./+/-/_.
        first_name:
          type: string
          title: Имя
          maxLength: 150
        last_name:
          type: string
          title: Фамилия
          maxLength: 150
        email:
          type: string
          format: email
          title: Адрес электронной почты
          maxLength: 254
        is_staff:
          type: boolean
          readOnly: true
          title: Статус персонала
          description: Отметьте, если пользователь может входить в административную
            часть сайта.
        is_active:
          type: boolean
          readOnly: true
          title: Активный
          description: Отметьте, если пользователь должен считаться активным. Уберите
            эту отметку вместо удаления учётной записи.
        date_joined:
          type: string
          format: date-time
          readOnly: true
          title: Дата регистрации
      required:
      - password
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
